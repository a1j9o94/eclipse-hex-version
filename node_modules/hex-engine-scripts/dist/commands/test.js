"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = test;

var _child_process = _interopRequireDefault(require("child_process"));

var _onExit = _interopRequireDefault(require("on-exit"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var child = null;
(0, _onExit["default"])(function () {
  if (child) {
    child.kill("SIGKILL");
  }
});

function test() {
  process.env.BABEL_ENV = "test";
  process.env.NODE_ENV = "test";
  child = _child_process["default"].spawn("node", [require.resolve("@test-it/cli/dist/cli.js"), "--loader", require.resolve("../test-it-loader")].concat(_toConsumableArray(process.argv.slice(3))), {
    stdio: "inherit"
  });
  return new Promise(function (resolve, reject) {
    if (!child) return reject(new Error("No child spawned"));
    child.on("error", function (err) {
      child = null;
      reject(err);
    });
    child.on("exit", function (code, _signal) {
      child = null;

      if (code) {
        process.exitCode = code;
      }

      resolve();
    });
  });
}