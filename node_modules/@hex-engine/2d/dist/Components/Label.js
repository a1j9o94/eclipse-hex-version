import { useType } from "@hex-engine/core";
import { useUpdate } from "../Hooks";
import { Vector } from "../Models";
/** This Component renders some text using the provided Font Component (either a Font, BMFont, or SystemFont). */

export default function Label(_ref) {
  var _ref$text = _ref.text,
      text = _ref$text === void 0 ? "" : _ref$text,
      font = _ref.font;
  useType(Label);
  var state = {
    text: text
  };
  var size = new Vector(0, 0);

  function updateSize() {
    var metrics = font.measureText(state.text);
    size.x = metrics.width;
    size.y = metrics.height;
  }

  updateSize();
  useUpdate(updateSize);
  return {
    /** The amount of space that the text will take up, when drawn. */
    size: size,

    /** Draws the text into the context. */
    draw: function draw(context) {
      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref2$x = _ref2.x,
          x = _ref2$x === void 0 ? 0 : _ref2$x,
          _ref2$y = _ref2.y,
          y = _ref2$y === void 0 ? 0 : _ref2$y,
          _ref2$baseline = _ref2.baseline,
          baseline = _ref2$baseline === void 0 ? undefined : _ref2$baseline;

      if (!font.readyToDraw()) return;
      font.drawText(context, state.text, {
        x: x,
        y: y,
        baseline: baseline
      });
    },

    /** The text to render. You can change this to change what to render. */
    get text() {
      return state.text;
    },

    set text(nextValue) {
      state.text = nextValue;
      updateSize();
    }

  };
}