import { useNewComponent, useType } from "@hex-engine/core";
import Image from "./Image";
import { Vector } from "../Models";
/**
 * A Component that helps you draw individual sprites from a sprite sheet.
 *
 * It is designed to be used with an image that is laid out like a film strip,
 * with many sprites on it. Each sprite will be assigned an index from left-to-right,
 * top-to-bottom (if there are multiple rows in the sheet), and you can specify which
 * index should be drawn to the canvas.
 */

export default function SpriteSheet(_ref) {
  var url = _ref.url,
      tileWidth = _ref.tileWidth,
      tileHeight = _ref.tileHeight;
  useType(SpriteSheet);
  var image = useNewComponent(function () {
    return Image({
      url: url
    });
  });
  return {
    /** The size of each tile in the sheet. */
    tileSize: new Vector(tileWidth, tileHeight),

    /** Draw the tile at the specified index into the canvas. */
    draw: function draw(context, _ref2) {
      var _ref2$x = _ref2.x,
          x = _ref2$x === void 0 ? 0 : _ref2$x,
          _ref2$y = _ref2.y,
          y = _ref2$y === void 0 ? 0 : _ref2$y,
          tileIndex = _ref2.tileIndex,
          _ref2$width = _ref2.width,
          width = _ref2$width === void 0 ? tileWidth : _ref2$width,
          _ref2$height = _ref2.height,
          height = _ref2$height === void 0 ? tileHeight : _ref2$height;
      var data = image.data;
      if (data == null) return;
      var tilesPerRow = Math.floor(data.width / tileWidth);
      var tileX = tileIndex % tilesPerRow;
      var tileY = Math.floor(tileIndex / tilesPerRow);
      image.draw(context, {
        x: x,
        y: y,
        sourceX: tileX * tileWidth,
        sourceY: tileY * tileHeight,
        sourceWidth: tileWidth,
        sourceHeight: tileHeight,
        targetWidth: width,
        targetHeight: height
      });
    }
  };
}