import { useType, useRootEntity, useNewRootComponent } from "@hex-engine/core";

function StorageForUseContext() {
  useType(StorageForUseContext);
  return {
    context: null
  };
}

export function setContext(context) {
  var storage = useRootEntity().getComponent(StorageForUseContext) || useNewRootComponent(StorageForUseContext);
  storage.context = context;
}
/**
 * Returns the 2d rendering context of the root component's Canvas.
 * This is the same context that gets passed into `useDraw`'s callback.
 */

export default function useContext() {
  var storage = useRootEntity().getComponent(StorageForUseContext) || useNewRootComponent(StorageForUseContext);

  if (storage.context == null) {
    throw new Error("Attempted to call useContext before setContext, so context was not yet available.");
  }

  return storage.context;
}