import { useNewComponent, useEntity } from "@hex-engine/core";
import { useInspectorSelect } from "@hex-engine/inspector";
import { useDraw } from "../Hooks";
import Mouse from "../Components/Mouse";
/**
 * Sets up the Inspector so that if the Inspector is in select mode,
 * any Entity that has a Geometry component and is hovered in world space
 * will be highlighted. Clicks on highlighted Entities will report them to
 * the Inspector.
 *
 * This function does nothing in release builds.
 */

export default function useInspectorHoverOutline(getGeometry) {
  if (process.env.NODE_ENV === "production") return;
  var entity = useEntity();
  var geometry = getGeometry();

  if (geometry === undefined) {
    return;
  }

  var _useInspectorSelect = useInspectorSelect(),
      getSelectMode = _useInspectorSelect.getSelectMode,
      inspectEntity = _useInspectorSelect.inspectEntity;

  var _useNewComponent = useNewComponent(function () {
    return Mouse({
      entity: entity,
      geometry: geometry
    });
  }),
      onEnter = _useNewComponent.onEnter,
      onLeave = _useNewComponent.onLeave,
      onClick = _useNewComponent.onClick;

  var hovered = false;
  onEnter(function () {
    if (getSelectMode()) {
      hovered = true;
    }
  });
  onLeave(function () {
    if (getSelectMode()) {
      hovered = false;
    }
  });
  onClick(function () {
    if (getSelectMode()) {
      hovered = false;
      inspectEntity(entity);
    }
  });
  useDraw(function (context) {
    if (hovered) {
      var shape = geometry.shape;
      var color = "#B076C7";
      var alpha = 0.35;
      context.lineWidth = 3;
      context.strokeStyle = color;
      shape.draw(context, "stroke");
      context.fillStyle = color;
      context.globalAlpha = alpha;
      shape.draw(context, "fill");
    }
  });
}