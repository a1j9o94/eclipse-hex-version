/**
 * Searches through the provided canvas context for non-transparent pixels
 * and identifies a bounding box that contains them.
 *
 * Warning: This function is expensive. Avoid using it on every frame.
 */
export default function useFilledPixelBounds(context) {
  var imageData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);
  var pixels = imageData.data;
  var minX = Infinity;
  var maxX = 0;
  var minY = Infinity;
  var maxY = 0;

  for (var i = 0; i < pixels.length; i += 4) {
    var pixelIndex = i / 4;
    var alpha = pixels[i + 3];

    if (alpha > 0) {
      var x = pixelIndex % imageData.width;

      if (x < minX) {
        minX = x;
      }

      if (x > maxX) {
        maxX = x;
      }

      var y = Math.floor(pixelIndex / imageData.width);

      if (y < minY) {
        minY = y;
      }

      if (y > maxY) {
        maxY = y;
      }
    }
  }

  if (maxX === 0 && minX === Infinity && maxY === 0 && minY === Infinity) {
    throw new Error("Tried to get filled pixel bounds, but there were no filled pixels");
  }

  return {
    minX: minX,
    maxX: maxX,
    minY: minY,
    maxY: maxY
  };
}