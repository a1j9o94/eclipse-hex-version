import React from "react";
import Button from "./Button";
import { ResumeIcon, StepIcon, PauseIcon, PaneRightIcon, PaneLeftIcon, PickEntityIcon, MinimizeIcon } from "./Icons";
export default function Controls(_ref) {
  var runLoop = _ref.runLoop,
      error = _ref.error,
      isOpen = _ref.isOpen,
      toggleOpen = _ref.toggleOpen,
      isSelectMode = _ref.isSelectMode,
      toggleSelectMode = _ref.toggleSelectMode,
      collapseTree = _ref.collapseTree;
  return React.createElement("div", {
    style: {
      display: "flex",
      backgroundColor: error ? "#ff9a9a" : "#eee",
      padding: 2
    }
  }, React.createElement(Button, {
    title: "Pick an entity from the canvas",
    onClick: toggleSelectMode
  }, React.createElement("span", {
    style: {
      padding: 4,
      color: "".concat(isSelectMode ? "#008eff" : "#222")
    }
  }, React.createElement(PickEntityIcon, null))), isOpen && React.createElement(Button, {
    title: "Collapse Inspector Tree",
    onClick: collapseTree
  }, React.createElement("span", {
    style: {
      padding: 4,
      color: "#222"
    }
  }, React.createElement(MinimizeIcon, null))), runLoop.isPaused() ? React.createElement(React.Fragment, null, React.createElement(Button, {
    onClick: function onClick() {
      localStorage.inspectorPauseOnStart = "false";
      runLoop.resume();
    },
    title: "Resume execution"
  }, React.createElement("span", {
    style: {
      padding: 4,
      color: "#008eff"
    }
  }, React.createElement(ResumeIcon, null))), React.createElement(Button, {
    onClick: function onClick() {
      runLoop.step();
    },
    title: "Run one frame"
  }, React.createElement("span", {
    style: {
      padding: 4,
      color: "#222"
    }
  }, React.createElement(StepIcon, null)))) : React.createElement(Button, {
    onClick: function onClick() {
      localStorage.inspectorPauseOnStart = "true";
      runLoop.pause();
    },
    title: "Pause execution"
  }, React.createElement("span", {
    style: {
      padding: 4,
      color: "#222"
    }
  }, React.createElement(PauseIcon, null))), React.createElement("div", {
    style: {
      flexGrow: 1
    }
  }), React.createElement("div", {
    style: {
      padding: 4
    }
  }, runLoop.isPaused() ? error ? "Paused due to ".concat(error.name, ": ").concat(error.message, " (check console for more info)") : "Paused (frame ".concat(runLoop.frameNumber, ")") : "Running"), isOpen ? React.createElement(Button, {
    onClick: toggleOpen,
    title: "Hide inspector pane"
  }, React.createElement("span", {
    style: {
      padding: 6,
      color: "#222"
    }
  }, React.createElement(PaneRightIcon, null))) : React.createElement(Button, {
    onClick: toggleOpen,
    title: "Show inspector pane"
  }, React.createElement("span", {
    style: {
      padding: 6,
      color: "#222"
    }
  }, React.createElement(PaneLeftIcon, null))));
}