import React, { useEffect, useRef } from "react";
import Button from "./Button";
export default function Expandable(_ref) {
  var label = _ref.label,
      preview = _ref.preview,
      className = _ref.className,
      children = _ref.children,
      hasContent = _ref.hasContent,
      expanded = _ref.expanded,
      isSelected = _ref.isSelected,
      onExpand = _ref.onExpand,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      onContextMenu = _ref.onContextMenu;
  var elementRef = useRef(null);
  useEffect(function () {
    if (isSelected) {
      var _elementRef$current;

      (_elementRef$current = elementRef.current) === null || _elementRef$current === void 0 ? void 0 : _elementRef$current.scrollIntoView({
        block: "center"
      });
    }
  }, [isSelected, elementRef]);
  return React.createElement("div", {
    ref: elementRef,
    style: {
      position: "relative",
      paddingLeft: 8,
      paddingTop: 2
    }
  }, React.createElement("span", {
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onContextMenu: onContextMenu
  }, isSelected && React.createElement("div", {
    style: {
      position: "absolute",
      top: 0,
      left: "-100vw",
      width: "300vw",
      height: 18,
      background: "rgba(176,118,199,0.35)",
      pointerEvents: "none"
    }
  }), React.createElement(Button, {
    onClick: onExpand
  }, React.createElement("div", {
    style: {
      color: "rgb(110, 110, 110)",
      display: "inline-block",
      fontSize: 12,
      marginRight: 3,
      userSelect: "none",
      transform: expanded ? "rotateZ(90deg)" : ""
    }
  }, "\u25B6"), label && React.createElement("span", {
    style: {
      color: "rgb(136, 19, 145)",
      userSelect: "none",
      marginRight: "0.7em"
    }
  }, label), className && React.createElement("span", {
    style: {
      marginRight: "0.7em"
    }
  }, className)), expanded ? null : preview), expanded && React.createElement("div", null, (hasContent ? children : null) || React.createElement("span", {
    style: {
      paddingLeft: 8,
      paddingTop: 2
    }
  }, preview)));
}